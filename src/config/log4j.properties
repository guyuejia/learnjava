#该配置文件所在目录必须在项目中设置为resource目录，因为该日志模块内部是自动通过classpath方式来获取配置文件的

###配置log4j日志环境###
log4j.rootLogger = debug,stdout,D,E
### 输出信息到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.Threshold = DEBUG
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### 输出DEBUG 级别以上的日志到文件/hadoop/log/debug.log ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#如果是win环境下，目录自动会在c盘创建该目录c:\\hadoop\\log
log4j.appender.D.File = /hadoop/log/debug.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.D.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%t:%r] - [%p] %m%n

### 输出ERROR 级别以上的日志文件到 文件/hadoop/log/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = /hadoop/log/error.log
log4j.appender.E.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%t:%r] - [%p] %m%n